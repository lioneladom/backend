# =====================
# Production Configuration for Supabase PostgreSQL
# =====================

# Database Configuration
spring.datasource.url=jdbc:postgresql://db.qindoeldnsrybeixezhs.supabase.co:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=FitTrack@1234
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# JWT Configuration (Production)
app.jwt.secret=${JWT_SECRET:VGhpcyBpcyBhIHZlcnkgc2VjdXJlIGFuZCBsb25nIHJhbmRvbSBzZWNyZXQga2V5IQpKQk1uU2h2d3p5Q2Z4d2VydGh5dWlvcGFzZGZnUHJvZHVjdGlvbktleQ==}
app.jwt.expiration=86400000

# Server Configuration
server.port=${PORT:8080}
server.error.include-message=always
server.error.include-binding-errors=always

# Logging Configuration
logging.level.org.springframework.security=WARN
logging.level.org.springframework.security.web.authentication=WARN
logging.level.org.springframework.security.authentication=WARN
logging.level.com.fittrack=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# File Upload Settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Supabase Configuration
SUPABASE_URL=${SUPABASE_URL:https://qindoeldnsrybeixezhs.supabase.co}
SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFpbmRvZWxkbnNyeWJlaXhlemhzIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzgzNTkzNCwiZXhwIjoyMDY5NDExOTM0fQ.fp69aqLIE8UgYIwjh9MmFC9EcFBY917UXvH1k1GlAko}

# CORS Configuration
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:3000,https://your-frontend-domain.com}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true